// Mocks generated by Mockito 5.2.0 from annotations
// in notr/test/views/pages/login_page/login_page_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:notr/models/either.dart' as _i2;
import 'package:notr/models/email_and_password_credentials.dart' as _i7;
import 'package:notr/models/failures/failure.dart' as _i5;
import 'package:notr/services/authentication_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i3.AuthenticationService {
  MockAuthenticationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserCredential>>
      signInWithEmailAndPassword(
              _i7.EmailAndPasswordCredentials? credentials) =>
          (super.noSuchMethod(
                  Invocation.method(#signInWithEmailAndPassword, [credentials]),
                  returnValue:
                      Future<_i2.Either<_i5.Failure, _i6.UserCredential>>.value(
                          _FakeEither_0<_i5.Failure, _i6.UserCredential>()))
              as _i4.Future<_i2.Either<_i5.Failure, _i6.UserCredential>>);
  @override
  void listenForAuthStateChanges(
          dynamic Function(_i6.User?)? onAuthStateChanged) =>
      super.noSuchMethod(
          Invocation.method(#listenForAuthStateChanges, [onAuthStateChanged]),
          returnValueForMissingStub: null);
}
